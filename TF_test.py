# -*- coding: utf-8 -*-
"""
Created on Mon May 01 17:05:04 2017

@author: medialab
"""

import h5py
import numpy as np
import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d import Axes3D
from scipy.special import expit
import tensorflow as tf


def conv2d(x, W):
    return tf.nn.conv2d(x, W, strides=[1, 1, 1, 1], padding = 'SAME')

def deconv2d(x, W, output_shape):
    return tf.nn.conv2d_transpose(x, W, output_shape, strides = [1, 1, 1, 1], padding = 'SAME')
idx = 99
start = 200
#KandM.h5 is generated by concatenate.py
src_path = './Concatenate_Data/CNN/'
date_ext = '_CNN_0427'
data_ext = 'M2K_rel'



NK = h5py.File(src_path + 'limb_KandM_ex4'+date_ext+'.h5','r')['N_Kinect'][:]
K  = h5py.File(src_path + 'limb_KandM_ex4'+date_ext+'.h5','r')['Kinect'][:]
M  = h5py.File(src_path + 'limb_KandM_ex4'+date_ext+'.h5','r')['Mcam'][:]   
[MIN,MAX]  = h5py.File(src_path + 'NLdata'+date_ext+'.h5','r')['minmax'][:]  

We1   = h5py.File('./data/CNN/We1'+date_ext+data_ext+'.h5','r')['w_e_conv1_'+str(idx)][:]
We2   = h5py.File('./data/CNN/We2'+date_ext+data_ext+'.h5','r')['w_e_conv2_'+str(idx)][:]
Wd1   = h5py.File('./data/CNN/Wd1'+date_ext+data_ext+'.h5','r')['w_d_conv1_'+str(idx)][:]
Wd2   = h5py.File('./data/CNN/Wd2'+date_ext+data_ext+'.h5','r')['w_d_conv2_'+str(idx)][:]
be1   = h5py.File('./data/CNN/be1'+date_ext+data_ext+'.h5','r')['b_e_conv1_'+str(idx)][:]
be2   = h5py.File('./data/CNN/be2'+date_ext+data_ext+'.h5','r')['b_e_conv2_'+str(idx)][:]
bd1   = h5py.File('./data/CNN/bd1'+date_ext+data_ext+'.h5','r')['b_d_conv1_'+str(idx)][:]
bd2   = h5py.File('./data/CNN/bd2'+date_ext+data_ext+'.h5','r')['b_d_conv2_'+str(idx)][:]

[joints_num,group_size,batch_size,conv_ker_L1,conv_ker_L2] = h5py.File('./data/CNN/model'+date_ext+data_ext+'.h5','r')['parm'][:]

x = tf.placeholder(tf.float32, shape = [None, 30,18])
x_origin = tf.reshape(x, [-1, 30,18, 1])

he1 = tf.nn.relu(tf.add(conv2d(x_origin, We1), be1))
he2 = tf.nn.relu(tf.add(conv2d(he1, We2), be2))

output_shape_d1 = tf.pack([16, 30, 18, 4])
output_shape_d2 = tf.pack([16, 30, 18, 1])
hd1 = tf.nn.relu(deconv2d(he2, Wd1,output_shape_d1)+bd1)
hd2 = tf.nn.relu(deconv2d(hd1, Wd2,output_shape_d2)+bd2)

sess = tf.InteractiveSession()

batch_raw = NK[:,:,start:start+16].T
a = sess.run(he1,feed_dict={x:batch_raw})#.T[0,:,:,:]
b = sess.run(he2,feed_dict={x:batch_raw})
c = sess.run(hd1,feed_dict={x:batch_raw})
d = sess.run(hd2,feed_dict={x:batch_raw})
e = sess.run(x_origin,feed_dict={x:batch_raw})

print(a.shape)
print(b.shape)
print(c.shape)
print(d.shape)
print(e.shape)



